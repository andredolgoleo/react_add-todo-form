{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","defaultTodos","App","useState","isErrorUser","setIsErrorUser","isErrorTitle","setIsErrorTitle","setTitle","setUserId","setTodos","action","method","onSubmit","event","preventDefault","length","Math","max","htmlFor","type","value","onChange","currentTarget","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3ec97d1.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      { user && <UserInfo user={user} /> }\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport todosFromServer from './api/todos';\n\nconst getUser = (userId: number) => (\n  usersFromServer.find(user => user.id === userId) || null);\n\nconst defaultTodos: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUser(todo.userId),\n\n  }\n));\n\nexport const App: React.FC = () => {\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  const [isErrorTitle, setIsErrorTitle] = useState(false);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(defaultTodos);\n  const [completed] = useState(false);\n\n  const createTodo = () => (\n    {\n      id: Math.max(0, ...todos.map(({ id }) => id + 1)),\n      title,\n      completed,\n      userId,\n      user: getUser(userId) || null,\n    }\n  );\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event?.preventDefault();\n    if (title.length === 0) {\n      setIsErrorTitle(true);\n    }\n\n    if (userId === 0) {\n      setIsErrorUser(true);\n    }\n\n    if (isErrorTitle || isErrorUser) {\n      return;\n    }\n\n    if (title && userId) {\n      setTitle('');\n      setUserId(0);\n      setTodos([...todos, createTodo()]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.currentTarget.value);\n                setIsErrorTitle(false);\n              }}\n            />\n          </label>\n          {isErrorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(Number(event.currentTarget.value));\n                setIsErrorUser(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {isErrorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}